#! /usr/bin/env perl
#
# Copyright 2013, 2014 Stefan Hornburg (Racke) <racke@linuxia.de>

use strict;
use warnings;

use Interchange6::Schema;
use Interchange6::Schema::Populate::CountryLocale;
use Interchange6::Schema::Populate::MessageType;
use Interchange6::Schema::Populate::StateLocale;
use Interchange6::Schema::Populate::Zone;

use Dancer ':script';
use Dancer::Plugin::Interchange6;

use utf8;

# prepare records for populating the database
my $pop_countries = Interchange6::Schema::Populate::CountryLocale->new->records;
my $pop_messagetype = Interchange6::Schema::Populate::MessageType->new->records;
my $pop_states = Interchange6::Schema::Populate::StateLocale->new->records;
my $pop_zones = Interchange6::Schema::Populate::Zone->new->records;

my $shop_schema = shop_schema;

shop_schema->deploy({add_drop_table => 1,
                 });

my @attributes = ({name => 'color', title => 'Color'});

#shop_schema->populate('Attribute', \@attributes);

my @products = (
    {sku => 'F0001',
     name => 'One Dozen Roses',
     short_description => 'What says I love you better than 1 dozen fresh roses?',
     description => 'Surprise the one who makes you smile, or express yourself perfectly with this stunning bouquet of one dozen fresh red roses. This elegant arrangement is a truly thoughtful gift that shows how much you care.',
     price => '39.95',
     uri => 'one-dozen-roses',
     canonical_sku => undef,
     weight => '4'},
    {sku => 'F0001-RED',
     name => 'One Dozen Red Roses',
     short_description => 'What says I love you better than 1 dozen fresh roses?',
     description => 'Surprise the one who makes you smile, or express yourself perfectly with this stunning bouquet of one dozen fresh red roses. This elegant arrangement is a truly thoughtful gift that shows how much you care.',
     price => '49.95',
     uri => 'one-dozen-red-roses',
     weight => '6',
     canonical_sku => 'F0001'},
      {sku => 'F0001-YELLOW',
     name => 'One Dozen Yellow Roses',
     short_description => 'What says I love you better than 1 dozen fresh roses?',
     description => 'Surprise the one who makes you smile, or express yourself perfectly with this stunning bouquet of one dozen fresh red roses. This elegant arrangement is a truly thoughtful gift that shows how much you care.',
     price => '69.95',
     uri => 'one-dozen-yellow-roses',
     weight => '6',
     canonical_sku => 'F0001'},
    {sku => 'F0001-PINK',
     name => 'One Dozen Pink Roses',
     short_description => 'What says I love you better than 1 dozen fresh roses?',
     description => 'Surprise the one who makes you smile, or express yourself perfectly with this stunning bouquet of one dozen fresh red roses. This elegant arrangement is a truly thoughtful gift that shows how much you care.',
     price => '49.95',
     uri => 'one-dozen-pink-roses',
     weight => '4',
     canonical_sku => 'F0001'},
    {sku => 'F0002',
                 name => 'One Dozen Roses & Calla Lily',
                 short_description => 'What says I love you better than 1 dozen fresh roses with calla lily?',
                 description => 'Surprise the one who makes you smile, or express yourself perfectly with this stunning bouquet of one dozen fresh red roses. This elegant arrangement is a truly thoughtful gift that shows how much you care.',
                 price => '49.95',
                 uri => 'one-dozen-red-roses-calla-lilly',
                 weight => '5'});




my $user1 = shop_user->create({username => 'racke@nite.si',
                               email => 'racke@nite.si',
                               password => 'nevairbe',
                           });

# populate default roles array
my @roles = (
['anonymous', 'Anonymous Users'],
['authenticated', 'Authenticated Users'],
['user', 'User'],
['admin', 'Admin'],
['editor', 'Editor']
);

$shop_schema->resultset('User')->create({username => 'racke@linuxia.de',
                                         email => 'racke@linuxia.de',
                                         password => 'nevairbe',
                                        });

$shop_schema->populate('Country', $pop_countries);
$shop_schema->populate('MessageType', $pop_messagetype);
$shop_schema->populate('State', $pop_states);
my $zonepop = $shop_schema->populate('Zone', $pop_zones);

# populate addresses
my $shipping_address = shop_address->create({
    users_id => $user1->id,
    type => 'shipping',
    first_name => 'Test',
    last_name => 'Tester',
    address => 'Test Road 11',
    postal_code => '33333',
    city => 'Testhausen',
    country_iso_code => 'DE',
    phone => '111111',
});

my $billing_address = shop_address->create({
    users_id => $user1->id,
    type => 'billing',
    first_name => 'Testa',
    last_name => 'Testerin',
    address => 'Test Ave 11',
    postal_code => '44444',
    city => 'Test City',
    country_iso_code => 'CA',
    phone => '111222',
});


# populate roles table
$shop_schema->populate('Role', [
[ 'name', 'label' ],
@roles,
]);


my @navigation = (
['roses', 'nav', 'menu-main', 'Ruža', '', '0', undef, '0', '0', '0'],
['birthday', 'nav', 'menu-main', 'Birthday', '', '0', undef, '0', '0', '0'],
['flowers', 'nav', 'menu-main', 'Flowers', '', '0', undef, '0', '0', '0'],
['plants', 'nav', 'menu-main', 'Plants', '', '0', undef, '0', '0', '0'],
['occasions', 'nav', 'menu-main', 'Occasions', '', '0', undef, '0', '0', '0'],
['sympathy', 'nav', 'menu-main', 'Sympathy', '', '0', undef, '0', '0', '0'],
['gift-baskets', 'nav', 'menu-main', 'Gift Baskets', '', '0', undef, '0', '0', '0'],
['specialty-gifts', 'nav', 'menu-main', 'Specialty Gifts', '', '0', undef, '0', '0', '0'],
['same-day', 'nav', 'menu-main', 'Same Day', '', '0', undef, '0', '0', '0'],
['sale', 'nav', 'menu-main', 'Sale', '', '0', undef, '0', '0', '0'],
['login', 'auth', 'top-login', 'Login', '', '0', undef, '0', '0', '0'],
['registration', 'nav', 'top-right', 'Sign Up', '', '0', undef, '0', '0', '0'],
['forum', 'nav', 'top-left', 'Forum', '', '0', undef, '0', '0', '0'],
['about-us', 'nav', 'top-left', 'About Us', '', '0', undef, '0', '0', '0'],
['orders', 'nav', 'top-left', 'Orders', '', '0', undef, '0', '0', '0'],
['customer-service', 'nav', 'top-left', 'Customer Service', '', '0', undef, '0', '0', '0'],
['logout', 'auth', 'top-logout', 'Logout', '', '0', undef, '0', '0', '0']
);
 
# populate navigation table
my $navpop = $shop_schema->populate('Navigation', [
[ 'uri', 'type', 'scope', 'name', 'description', 'alias', 'parent_id', 'priority', 'product_count', 'active'],
@navigation,
]);

# create navigation_id hash
my %nid;

my $nav = $shop_schema->resultset('Navigation')->search();

while (my $record = $nav->next) {
    $nid{$record->name} = $record->navigation_id;
};

$shop_schema->resultset('Navigation')->find($nid{'Ruža'})->add_attribute('template', 'listing');
$shop_schema->resultset('Navigation')->find($nid{'Customer Service'})->add_attribute('template', 'customer-service');

scalar $shop_schema->populate('Product', \@products);

$shop_schema->resultset('NavigationProduct')->create({sku => 'F0001',
                                                     navigation_id => $nid{Sympathy}});

# create color attribute
my $color_data = {name => 'color', title => 'Color', type => 'variant', priority => 2,
                  attribute_values =>
                  [{value => 'black', title => 'Black'},
                   {value => 'white', title => 'White'},
                   {value => 'green', title => 'Green'},
                   {value => 'red', title => 'Red'},
                   {value => 'yellow', title => 'Yellow'},
                   {value => 'pink', title => 'Pink'},
                  ]};

my $color_att = $shop_schema->resultset('Attribute')->create($color_data);

# create size attribute
my $size_data = {name => 'size', title => 'Size', type => 'variant', priority => 1,
                  attribute_values =>
                  [{value => 'small', title => 'Small', priority => 2},
                   {value => 'medium', title => 'Medium', priority => 1},
                   {value => 'large', title => 'Large', priority => 0},
                              ]};

my $size_att = $shop_schema->resultset('Attribute')->create($size_data);

# create height attribute
my $height_data = {name => 'height', title => 'Height', type => 'variant', priority => 0,
                   attribute_values =>
                       [{value => '10', title => '10cm'},
                        {value => '20', title => '20cm'},
                    ]};

my $height_att = $shop_schema->resultset('Attribute')->create($height_data);

# create product G0001 with variants
my $product_g_data = {sku => 'G0001',
     name => 'Six Tulips',
     short_description => 'What says I love you better than 1 dozen fresh roses?',
     description => 'Surprise the one who makes you smile, or express yourself perfectly with this stunning bouquet of one dozen fresh red roses. This elegant arrangement is a truly thoughtful gift that shows how much you care.',
     price => '19.95',
     uri => 'six-tulips',
     weight => '4'};

my $product_g = $shop_schema->resultset('Product')->create($product_g_data)->add_variants(
    {color => 'yellow', size => 'small', sku => 'G0001-YELLOW-S',
     name => 'Six Small Yellow Tulips', uri => 'six-small-yellow-tulips'},
    {color => 'yellow', size => 'large', sku => 'G0001-YELLOW-L',
     name => 'Six Large Yellow Tulips', uri => 'six-large-yellow-tulips'},
     {color => 'pink', size => 'small', sku => 'G0001-PINK-S',
     name => 'Six Small Pink Tulips', uri => 'six-small-pink-tulips'},
    {color => 'pink', size => 'medium', sku => 'G0001-PINK-M',
     name => 'Six Medium Pink Tulips', uri => 'six-medium-pink-tulips'},
    {color => 'pink', size => 'large', sku => 'G0001-PINK-L',
     name => 'Six Large Pink Tulips', uri => 'six-large-pink-tulips'},
    );

$shop_schema->resultset('NavigationProduct')->create({sku => 'G0001',
                                                     navigation_id => $nid{Flowers}});

# create product for lily with variants
my $product_lily = {sku => 'LILY',
     name => 'Lily',
     short_description => 'Trumpet-shaped flowers',
     description => 'Surprise the one who makes you smile, or express yourself perfectly with this stunning bouquet of one dozen fresh red roses. This elegant arrangement is a truly thoughtful gift that shows how much you care.',
     price => '19.95',
     uri => 'lily',
     weight => '4'};

$shop_schema->resultset('Product')->create($product_lily)->add_variants(
    {color => 'white', size => 'small', height => 10, sku => 'LILY-WHITE-S-10',
     name => 'White small lilies, height 10', uri => 'white-small-lily-10',
 },
    {color => 'white', size => 'large', height => 10, sku => 'LILY-WHITE-L-10',
     name => 'White large lilies, height 10', uri => 'white-large-lily-10',
 },
    {color => 'yellow', size => 'medium', height => 20, sku => 'LILY-YELLOW-M-20',
     name => 'Yellow medium lilies, height 20', uri => 'yellow-medium-lily-20',
 },
);

$shop_schema->resultset('NavigationProduct')->create({sku => 'LILY',
                                                     navigation_id => $nid{Flowers}});
# category "Flowers"
$product_g->create_related('navigation_products', {navigation_id => $nid{Birthday}});

# assign to product F001
my $pa_data;
my %prod_color_att;

my @colors = ('red', 'yellow', 'pink');
for my $color (@colors) {
    $pa_data = {attributes_id => $color_att->id,
                sku => "F0001-" . uc($color),
            };

    $prod_color_att{$color} = $shop_schema->resultset('ProductAttribute')->create($pa_data);
};

my %prod_height_att;

my @heights = (10);
for my $height (@heights) {
    $pa_data = {attributes_id => $height_att->id,
                sku => "F0001",
            };

    $prod_height_att{$height} = $shop_schema->resultset('ProductAttribute')->create($pa_data);
}

#$pa_data = {attributes_id => $size_att->id,
#               sku => 'F0001'};

#my $prod_size_att = $shop_schema->resultset('ProductAttribute')->create($pa_dat#a);

# pick three colors out of four
for my $color (@colors) {
    my $pav_list = $color_att->search_related('attribute_values', {value => $color});
    my $pav;

    if ($pav = $pav_list->next) {
        my $pav_data = {attribute_values_id => $pav->id,
                        product_attributes_id => $prod_color_att{$color}->id,
                        };

        $shop_schema->resultset('ProductAttributeValue')->create($pav_data);
    }
    else {
        warn "Color Attribute $color not found.\n";
    }
}

my $pav_list = $height_att->search_related('attribute_values', {value => 10});
my $pav_data = {attribute_values_id => $pav_list->next->id,
                product_attributes_id => $prod_height_att{10}->id,
            };

$shop_schema->resultset('ProductAttributeValue')->create($pav_data);

my $variant_rs = $shop_schema->resultset('Product')->find('F0001')->search_related('variants');
my $variant;

while ($variant = $variant_rs->next) {
#    warn "Variant ", $variant->sku;

    # find attributes for this variant
    
}

# get zone for EU
my $eu_zone = $shop_schema->resultset('Zone')->find({zone => 'EU VAT countries'});

# shipment carriers and methods
my %carriers;

$carriers{Slovenske} = $shop_schema->resultset('ShipmentCarrier')->create(
    {
    name => 'Slovenske',
    shipment_methods => [
	{
	    name => 'standard',
	    title => 'Standard',
            shipment_rates => [
		{
		    price => 5,
		    zones_id => $eu_zone->id,
                },
		],
	},
	{
	    name => 'express',
	    title => 'Express',
	    max_weight => 100,
	    shipment_rates => [
		{
		    price => 15,
		    zones_id => $eu_zone->id,
                },
		],
           
	},
	],
    }
);

# add rates


# add test order
my @orderlines;
my $ol_prod = shop_product('F0001-PINK');

push @orderlines, {
    sku => $ol_prod->sku,
    order_position => 1,
    name => $ol_prod->name,
    short_description => $ol_prod->short_description,
    description => $ol_prod->description,
    weight => $ol_prod->weight,
    quantity => 4,
    price => $ol_prod->price,
    subtotal => $ol_prod->price * 4,
};

$ol_prod = shop_product('F0002');

push @orderlines, {
    sku => $ol_prod->sku,
    order_position => 2,
    name => $ol_prod->name,
    short_description => $ol_prod->short_description,
    description => $ol_prod->description,
    weight => $ol_prod->weight,
    quantity => 1,
    price => $ol_prod->price,
    subtotal => $ol_prod->price,
};

my %order_data = (order_number => 'RZ20140001',
                  order_date => '2014-02-27 11:11:11',
                  users_id => $user1->id,
                  billing_addresses_id => $billing_address->id,
                  shipping_addresses_id => $shipping_address->id,
                  orderlines => \@orderlines,
                  );

shop_order->create(\%order_data);
